
CREATE TABLE users (
  customer_id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL,
  address VARCHAR(255) NOT NULL,
  phone VARCHAR(20) NOT NULL,
  email VARCHAR(100) NOT NULL UNIQUE,
  password VARCHAR(100) NOT NULL,
  account_status ENUM('Active', 'Inactive') DEFAULT 'Active',
  registration_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  info_update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE users
ADD COLUMN role VARCHAR(50) DEFAULT 'user',
ADD COLUMN restaurant_id INT DEFAULT NULL;

ALTER TABLE users ADD COLUMN is_deleted BOOLEAN DEFAULT FALSE;
----------

CREATE TABLE Menus (
  menu_id INT PRIMARY KEY AUTO_INCREMENT,
  restaurant_id INT,
  dish_name VARCHAR(100) NOT NULL,
  description TEXT,
  price DECIMAL(8, 2) NOT NULL,
  availability ENUM('In Stock', 'Out of Stock') DEFAULT 'In Stock',
  information_update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (restaurant_id) REFERENCES Restaurants(restaurant_id) ON DELETE CASCADE
);

ALTER TABLE Menus ADD COLUMN is_deleted BOOLEAN DEFAULT FALSE;

-------

CREATE TABLE Orders (
  order_id INT PRIMARY KEY AUTO_INCREMENT,
  customer_id INT,
  order_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  delivery_status ENUM('Pending', 'Delivered', 'Cancelled') DEFAULT 'Pending',
  delivery_time TIMESTAMP NULL,
  total_amount DECIMAL(8, 2) NOT NULL,
  payment_status ENUM('Paid', 'Unpaid') DEFAULT 'Unpaid',
  FOREIGN KEY (customer_id) REFERENCES users(customer_id)
);

ALTER TABLE Orders
ADD COLUMN delivery_person_id INT,
ADD CONSTRAINT fk_delivery FOREIGN KEY (delivery_person_id) REFERENCES DeliveryPersonnel(delivery_id);

ALTER TABLE Orders
MODIFY delivery_status VARCHAR(50);
---------

CREATE TABLE Order_Items (
  order_item_id INT PRIMARY KEY AUTO_INCREMENT,
  order_id INT,
  menu_id INT,
  quantity INT DEFAULT 1,
  item_price DECIMAL(8, 2),
  FOREIGN KEY (order_id) REFERENCES Orders(order_id),
  FOREIGN KEY (menu_id) REFERENCES Menus(menu_id)
);
-------

CREATE TABLE DeliveryPersonnel (
  delivery_id INT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(100) NOT NULL,
  phone VARCHAR(20) UNIQUE,
  assigned_orders INT DEFAULT 0,
  status ENUM('Available', 'Assigned', 'On Delivery') DEFAULT 'Available',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  last_assigned TIMESTAMP NULL
);

-------

CREATE TABLE Ratings (
    rating_id INT AUTO_INCREMENT PRIMARY KEY,
    restaurant_id INT,
    user_id INT,
    rating INT CHECK (rating BETWEEN 1 AND 5),
    comment TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (restaurant_id) REFERENCES Restaurants(restaurant_id),
    FOREIGN KEY (user_id) REFERENCES users(customer_id)
);

ALTER TABLE Ratings ADD COLUMN order_id INT,
ADD FOREIGN KEY (order_id) REFERENCES Orders(order_id);

-------


